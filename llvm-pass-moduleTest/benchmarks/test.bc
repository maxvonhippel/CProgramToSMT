; ModuleID = 'benchmarks/Jay/afc_26_08_mod.c'
source_filename = "benchmarks/Jay/afc_26_08_mod.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, double, double, double, double, double }
%struct.RETURN_VAL = type { double, double, double }

; Function Attrs: nounwind uwtable
define dso_local noalias i8* @controller(%struct.INPUT_VAL* nocapture readonly %input, %struct.RETURN_VAL* nocapture %ret_val) local_unnamed_addr #0 !dbg !9 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !32, metadata !DIExpression()), !dbg !59
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !33, metadata !DIExpression()), !dbg !60
  %state_p_engine_speed = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 0, !dbg !61
  %0 = load double, double* %state_p_engine_speed, align 8, !dbg !61, !tbaa !62
  call void @llvm.dbg.value(metadata double %0, metadata !34, metadata !DIExpression()), !dbg !67
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !35, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref, DW_OP_stack_value)), !dbg !68
  %state_p_throttle_flow = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 2, !dbg !69
  %1 = load double, double* %state_p_throttle_flow, align 8, !dbg !69, !tbaa !70
  call void @llvm.dbg.value(metadata double %1, metadata !36, metadata !DIExpression()), !dbg !71
  %state_p_airbyfuel_meas = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 3, !dbg !72
  %2 = load double, double* %state_p_airbyfuel_meas, align 8, !dbg !72, !tbaa !73
  call void @llvm.dbg.value(metadata double %2, metadata !37, metadata !DIExpression()), !dbg !74
  %state_p_pi = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 4, !dbg !75
  %3 = load double, double* %state_p_pi, align 8, !dbg !75, !tbaa !76
  call void @llvm.dbg.value(metadata double %3, metadata !38, metadata !DIExpression()), !dbg !77
  %state_p_air_estimate = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 5, !dbg !78
  %4 = load double, double* %state_p_air_estimate, align 8, !dbg !78, !tbaa !79
  call void @llvm.dbg.value(metadata double %4, metadata !39, metadata !DIExpression()), !dbg !80
  call void @llvm.dbg.value(metadata i32 1, metadata !46, metadata !DIExpression()), !dbg !81
  call void @llvm.dbg.value(metadata double 0x7FF8000000000000, metadata !49, metadata !DIExpression()), !dbg !82
  call void @llvm.dbg.value(metadata i32 1, metadata !48, metadata !DIExpression()), !dbg !83
  call void @llvm.dbg.value(metadata double 0x7FF8000000000000, metadata !42, metadata !DIExpression()), !dbg !84
  call void @llvm.dbg.value(metadata i32 1, metadata !46, metadata !DIExpression()), !dbg !81
  call void @llvm.dbg.value(metadata double 7.000000e+01, metadata !50, metadata !DIExpression()), !dbg !85
  call void @llvm.dbg.value(metadata double 7.000000e+01, metadata !50, metadata !DIExpression()), !dbg !85
  call void @llvm.dbg.value(metadata double 1.470000e+01, metadata !49, metadata !DIExpression()), !dbg !82
  %mul = fmul double %0, %4, !dbg !86
  %mul18 = fmul double %mul, 0x3FB6FC7A398201CD, !dbg !87
  %add19 = fadd double %mul18, -3.660000e-01, !dbg !88
  %mul20 = fmul double %4, %4, !dbg !89
  %mul21 = fmul double %0, %mul20, !dbg !90
  %mul22 = fmul double %mul21, 3.370000e-02, !dbg !91
  %add23123 = fsub double %add19, %mul22, !dbg !91
  %mul24 = fmul double %0, %0, !dbg !92
  %mul25 = fmul double %mul24, %4, !dbg !93
  %mul26 = fmul double %mul25, 1.000000e-04, !dbg !94
  %add27 = fadd double %mul26, %add23123, !dbg !95
  call void @llvm.dbg.value(metadata double %add27, metadata !52, metadata !DIExpression()), !dbg !96
  %sub = fsub double %1, %add27, !dbg !97
  %mul28 = fmul double %sub, 4.132800e-01, !dbg !98
  %mul29 = fmul double %mul28, 1.000000e-02, !dbg !99
  %add30 = fadd double %4, %mul29, !dbg !100
  call void @llvm.dbg.value(metadata double %add30, metadata !41, metadata !DIExpression()), !dbg !101
  %sub33 = fadd double %2, -1.470000e+01, !dbg !102
  call void @llvm.dbg.value(metadata double %sub33, metadata !50, metadata !DIExpression()), !dbg !85
  %mul34 = fmul double %sub33, 1.400000e-01, !dbg !105
  %mul35 = fmul double %mul34, 1.000000e-02, !dbg !106
  %add36 = fadd double %3, %mul35, !dbg !107
  call void @llvm.dbg.value(metadata double %add36, metadata !54, metadata !DIExpression()), !dbg !108
  %mul37 = fmul double %sub33, 4.000000e-02, !dbg !109
  %add38 = fadd double %mul37, %add36, !dbg !110
  call void @llvm.dbg.value(metadata double %add38, metadata !55, metadata !DIExpression()), !dbg !111
  call void @llvm.dbg.value(metadata double %add36, metadata !40, metadata !DIExpression()), !dbg !112
  call void @llvm.dbg.value(metadata double %add36, metadata !40, metadata !DIExpression()), !dbg !112
  call void @llvm.dbg.value(metadata double %add38, metadata !55, metadata !DIExpression()), !dbg !111
  %add43 = fadd double %add38, 1.000000e+00, !dbg !113
  call void @llvm.dbg.value(metadata double %add43, metadata !50, metadata !DIExpression()), !dbg !85
  %cmp44 = fcmp ogt double %add43, 1.000000e+02, !dbg !116
  %cmp48 = fcmp olt double %add43, 0.000000e+00, !dbg !118
  %.add43 = select i1 %cmp48, double 0.000000e+00, double %add43, !dbg !120
  %rtb_Switch_n0.0 = select i1 %cmp44, double 1.000000e+02, double %.add43, !dbg !122
  call void @llvm.dbg.value(metadata double %rtb_Switch_n0.0, metadata !56, metadata !DIExpression()), !dbg !123
  %div = fdiv double %add27, 1.470000e+01, !dbg !124
  %mul55 = fmul double %div, %rtb_Switch_n0.0, !dbg !125
  call void @llvm.dbg.value(metadata double %mul55, metadata !50, metadata !DIExpression()), !dbg !85
  %cmp56 = fcmp ogt double %mul55, 1.660000e+00, !dbg !126
  %cmp60 = fcmp olt double %mul55, 1.300000e-01, !dbg !128
  %.mul55 = select i1 %cmp60, double 1.300000e-01, double %mul55, !dbg !130
  %rtb_DataStoreRead.0 = select i1 %cmp56, double 1.660000e+00, double %.mul55, !dbg !132
  call void @llvm.dbg.value(metadata double %rtb_DataStoreRead.0, metadata !57, metadata !DIExpression()), !dbg !133
  call void @llvm.dbg.value(metadata double %rtb_DataStoreRead.0, metadata !58, metadata !DIExpression()), !dbg !134
  %next_c_commanded_fuel_gps = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !135
  store double %rtb_DataStoreRead.0, double* %next_c_commanded_fuel_gps, align 8, !dbg !136, !tbaa !137
  %next_p_air_estimate = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 2, !dbg !139
  store double %add30, double* %next_p_air_estimate, align 8, !dbg !140, !tbaa !141
  %next_p_pi = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 1, !dbg !142
  store double %add36, double* %next_p_pi, align 8, !dbg !143, !tbaa !144
  ret i8* null, !dbg !145
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "benchmarks/Jay/afc_26_08_mod.c", directory: "/home/amit/MyData/1ProjectFMSafe/llvm-pass-moduleTest")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 7.0.0 "}
!9 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 41, type: !10, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !31)
!10 = !DISubroutineType(types: !11)
!11 = !{!4, !12, !24}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !14, line: 23, baseType: !15)
!14 = !DIFile(filename: "benchmarks/Jay/controller.h", directory: "/home/amit/MyData/1ProjectFMSafe/llvm-pass-moduleTest")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 11, size: 384, elements: !16)
!16 = !{!17, !19, !20, !21, !22, !23}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_engine_speed", scope: !15, file: !14, line: 14, baseType: !18, size: 64)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_throttle_angle", scope: !15, file: !14, line: 15, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_throttle_flow", scope: !15, file: !14, line: 16, baseType: !18, size: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_airbyfuel_meas", scope: !15, file: !14, line: 17, baseType: !18, size: 64, offset: 192)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_pi", scope: !15, file: !14, line: 20, baseType: !18, size: 64, offset: 256)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_air_estimate", scope: !15, file: !14, line: 21, baseType: !18, size: 64, offset: 320)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !14, line: 9, baseType: !26)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 2, size: 192, elements: !27)
!27 = !{!28, !29, !30}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "next_c_commanded_fuel_gps", scope: !26, file: !14, line: 5, baseType: !18, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_pi", scope: !26, file: !14, line: 6, baseType: !18, size: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_air_estimate", scope: !26, file: !14, line: 7, baseType: !18, size: 64, offset: 128)
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58}
!32 = !DILocalVariable(name: "input", arg: 1, scope: !9, file: !1, line: 41, type: !12)
!33 = !DILocalVariable(name: "ret_val", arg: 2, scope: !9, file: !1, line: 41, type: !24)
!34 = !DILocalVariable(name: "temp_engine_speed", scope: !9, file: !1, line: 45, type: !18)
!35 = !DILocalVariable(name: "temp_throttle_angle", scope: !9, file: !1, line: 46, type: !18)
!36 = !DILocalVariable(name: "temp_throttle_flow", scope: !9, file: !1, line: 47, type: !18)
!37 = !DILocalVariable(name: "temp_airbyfuel_meas", scope: !9, file: !1, line: 48, type: !18)
!38 = !DILocalVariable(name: "prev_pi", scope: !9, file: !1, line: 51, type: !18)
!39 = !DILocalVariable(name: "prev_air_estimate", scope: !9, file: !1, line: 52, type: !18)
!40 = !DILocalVariable(name: "pi", scope: !9, file: !1, line: 53, type: !18)
!41 = !DILocalVariable(name: "air_estimate", scope: !9, file: !1, line: 54, type: !18)
!42 = !DILocalVariable(name: "normal_mode_detect_1", scope: !9, file: !1, line: 57, type: !18)
!43 = !DILocalVariable(name: "power_mode_detect", scope: !9, file: !1, line: 59, type: !44)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "boolean_T", file: !1, line: 5, baseType: !45)
!45 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!46 = !DILocalVariable(name: "normal_mode_detect_1_e", scope: !9, file: !1, line: 60, type: !44)
!47 = !DILocalVariable(name: "rtb_LogicalOperator", scope: !9, file: !1, line: 61, type: !44)
!48 = !DILocalVariable(name: "rtb_LogicalOperator_d", scope: !9, file: !1, line: 62, type: !44)
!49 = !DILocalVariable(name: "rtb_Sum_d", scope: !9, file: !1, line: 63, type: !18)
!50 = !DILocalVariable(name: "rtb_Sum1_d", scope: !9, file: !1, line: 64, type: !18)
!51 = !DILocalVariable(name: "rtb_RelationalOperator1", scope: !9, file: !1, line: 65, type: !44)
!52 = !DILocalVariable(name: "rtb_Sum3", scope: !9, file: !1, line: 66, type: !18)
!53 = !DILocalVariable(name: "rtb_DataStoreRead3_f", scope: !9, file: !1, line: 67, type: !44)
!54 = !DILocalVariable(name: "rtb_Sum2", scope: !9, file: !1, line: 68, type: !18)
!55 = !DILocalVariable(name: "Sum3", scope: !9, file: !1, line: 69, type: !18)
!56 = !DILocalVariable(name: "rtb_Switch_n0", scope: !9, file: !1, line: 70, type: !18)
!57 = !DILocalVariable(name: "rtb_DataStoreRead", scope: !9, file: !1, line: 71, type: !18)
!58 = !DILocalVariable(name: "commanded_fuel_gps", scope: !9, file: !1, line: 74, type: !18)
!59 = !DILocation(line: 41, column: 29, scope: !9)
!60 = !DILocation(line: 41, column: 48, scope: !9)
!61 = !DILocation(line: 45, column: 36, scope: !9)
!62 = !{!63, !64, i64 0}
!63 = !{!"", !64, i64 0, !64, i64 8, !64, i64 16, !64, i64 24, !64, i64 32, !64, i64 40}
!64 = !{!"double", !65, i64 0}
!65 = !{!"omnipotent char", !66, i64 0}
!66 = !{!"Simple C/C++ TBAA"}
!67 = !DILocation(line: 45, column: 9, scope: !9)
!68 = !DILocation(line: 46, column: 9, scope: !9)
!69 = !DILocation(line: 47, column: 37, scope: !9)
!70 = !{!63, !64, i64 16}
!71 = !DILocation(line: 47, column: 9, scope: !9)
!72 = !DILocation(line: 48, column: 38, scope: !9)
!73 = !{!63, !64, i64 24}
!74 = !DILocation(line: 48, column: 9, scope: !9)
!75 = !DILocation(line: 51, column: 26, scope: !9)
!76 = !{!63, !64, i64 32}
!77 = !DILocation(line: 51, column: 9, scope: !9)
!78 = !DILocation(line: 52, column: 36, scope: !9)
!79 = !{!63, !64, i64 40}
!80 = !DILocation(line: 52, column: 9, scope: !9)
!81 = !DILocation(line: 60, column: 12, scope: !9)
!82 = !DILocation(line: 63, column: 9, scope: !9)
!83 = !DILocation(line: 62, column: 12, scope: !9)
!84 = !DILocation(line: 57, column: 9, scope: !9)
!85 = !DILocation(line: 64, column: 9, scope: !9)
!86 = !DILocation(line: 115, column: 33, scope: !9)
!87 = !DILocation(line: 115, column: 53, scope: !9)
!88 = !DILocation(line: 115, column: 58, scope: !9)
!89 = !DILocation(line: 115, column: 84, scope: !9)
!90 = !DILocation(line: 115, column: 104, scope: !9)
!91 = !DILocation(line: 115, column: 124, scope: !9)
!92 = !DILocation(line: 115, column: 150, scope: !9)
!93 = !DILocation(line: 115, column: 170, scope: !9)
!94 = !DILocation(line: 115, column: 190, scope: !9)
!95 = !DILocation(line: 115, column: 130, scope: !9)
!96 = !DILocation(line: 66, column: 9, scope: !9)
!97 = !DILocation(line: 117, column: 57, scope: !9)
!98 = !DILocation(line: 117, column: 69, scope: !9)
!99 = !DILocation(line: 117, column: 74, scope: !9)
!100 = !DILocation(line: 117, column: 35, scope: !9)
!101 = !DILocation(line: 54, column: 9, scope: !9)
!102 = !DILocation(line: 124, column: 36, scope: !103)
!103 = distinct !DILexicalBlock(scope: !104, file: !1, line: 122, column: 29)
!104 = distinct !DILexicalBlock(scope: !9, file: !1, line: 122, column: 6)
!105 = !DILocation(line: 125, column: 18, scope: !103)
!106 = !DILocation(line: 125, column: 31, scope: !103)
!107 = !DILocation(line: 125, column: 51, scope: !103)
!108 = !DILocation(line: 68, column: 9, scope: !9)
!109 = !DILocation(line: 126, column: 14, scope: !103)
!110 = !DILocation(line: 126, column: 27, scope: !103)
!111 = !DILocation(line: 69, column: 9, scope: !9)
!112 = !DILocation(line: 53, column: 9, scope: !9)
!113 = !DILocation(line: 135, column: 32, scope: !114)
!114 = distinct !DILexicalBlock(scope: !115, file: !1, line: 134, column: 9)
!115 = distinct !DILexicalBlock(scope: !9, file: !1, line: 132, column: 6)
!116 = !DILocation(line: 136, column: 18, scope: !117)
!117 = distinct !DILexicalBlock(scope: !114, file: !1, line: 136, column: 7)
!118 = !DILocation(line: 138, column: 25, scope: !119)
!119 = distinct !DILexicalBlock(scope: !117, file: !1, line: 138, column: 14)
!120 = !DILocation(line: 140, column: 3, scope: !121)
!121 = distinct !DILexicalBlock(scope: !119, file: !1, line: 138, column: 56)
!122 = !DILocation(line: 136, column: 7, scope: !114)
!123 = !DILocation(line: 70, column: 9, scope: !9)
!124 = !DILocation(line: 145, column: 24, scope: !9)
!125 = !DILocation(line: 145, column: 36, scope: !9)
!126 = !DILocation(line: 146, column: 17, scope: !127)
!127 = distinct !DILexicalBlock(scope: !9, file: !1, line: 146, column: 6)
!128 = !DILocation(line: 148, column: 24, scope: !129)
!129 = distinct !DILexicalBlock(scope: !127, file: !1, line: 148, column: 13)
!130 = !DILocation(line: 150, column: 2, scope: !131)
!131 = distinct !DILexicalBlock(scope: !129, file: !1, line: 148, column: 52)
!132 = !DILocation(line: 146, column: 6, scope: !9)
!133 = !DILocation(line: 71, column: 9, scope: !9)
!134 = !DILocation(line: 74, column: 9, scope: !9)
!135 = !DILocation(line: 156, column: 11, scope: !9)
!136 = !DILocation(line: 156, column: 37, scope: !9)
!137 = !{!138, !64, i64 0}
!138 = !{!"", !64, i64 0, !64, i64 8, !64, i64 16}
!139 = !DILocation(line: 157, column: 11, scope: !9)
!140 = !DILocation(line: 157, column: 31, scope: !9)
!141 = !{!138, !64, i64 16}
!142 = !DILocation(line: 158, column: 11, scope: !9)
!143 = !DILocation(line: 158, column: 21, scope: !9)
!144 = !{!138, !64, i64 8}
!145 = !DILocation(line: 160, column: 2, scope: !9)
